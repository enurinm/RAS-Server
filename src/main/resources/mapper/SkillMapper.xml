<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ras.mapper.SkillMapper">
    <select id="selectSkillList" resultType="com.ras.dao.SkillListDao" parameterType="com.ras.dao.SkillListDao">
        select s.* /* SkillMapper.selectSkillList :: 스킬 리스트 조회 */
        from skill s
            inner join skill_effect se on s.id = se.skill_id
        <where>
            <if test="effectCd != null">
                se.effect_cd = #{effectCd}
            </if>
        </where>
    </select>

    <select id="selectSkill" resultType="com.ras.dao.SkillDetailDao" parameterType="com.ras.dao.SkillListDao">
        select s.* /* SkillMapper.selectSkill :: 스킬 조회 */
        from skill s
        <where>
            id = #{id}
        </where>
    </select>

    <select id="selectSkillEffectList" resultType="com.ras.dao.SkillEffectDao" parameterType="com.ras.dao.SkillListDao">
        select se.* /* SkillMapper.selectSkillEffectList :: 스킬 효과 리스트 조회 */
            , (select c.code_name
                from code c
                where c.type = 3 and c.code = se.effect_cd
            ) as effect_name
            , (select s.name
               from stat s
               where s.id = se.effect_type_stat
            ) as effect_type_stat_name
        from skill_effect se
        <where>
            se.skill_id = #{id}
            and se.use_yn = 1
        </where>
    </select>

    <select id="selectSkillTriggerList" resultType="com.ras.dao.SkillTriggerDao" parameterType="com.ras.dao.SkillListDao">
        select st.* /* SkillMapper.selectSkillTriggerList :: 스킬 발동조건 리스트 조회 */
            , ( select c.code_name
                from code c
                where c.type = 5 and c.code = st.trigger_type_cd
            ) as trigger_name
            , ( select name
                from stat s
                where st.trigger_stat_id = s.id
            ) as trigger_stat_name
        from skill_trigger st
        <where>
            st.skill_id = #{id}
            and st.use_yn = 1
        </where>
    </select>

    <insert id="insertSkill" parameterType="com.ras.dao.SkillDetailDao" useGeneratedKeys="true" keyProperty="id">
        insert into skill /* SkillMapper.insertSkill :: 스킬 등록 */
        (
              name
            , img
            , txt
        )
        values (
             #{name}
           , #{img}
           , #{txt}
        )
    </insert>

    <insert id="insertSkillTrigger" parameterType="com.ras.dao.SkillTriggerDao" useGeneratedKeys="true" keyProperty="id">
        insert into skill_trigger /* SkillMapper.insertSkillTrigger :: 스킬 발동조건 등록 */
        (
              trigger_type_cd
            , trigger_stat_id
            , trigger_num
            , trigger_percent_yn
            , trigger_be_ab_yn
            , trigger_first_do_yn
            , skill_id
            , use_yn
        )
        values (
              #{triggerTypeCd}
            , #{triggerStatId}
            , #{triggerNum}
            , #{triggerPercentYn}
            , #{triggerBeAbYn}
            , #{triggerFirstDoYn}
            , #{skillId}
            , 1
        )
    </insert>

    <insert id="insertSkillEffect" parameterType="com.ras.dao.SkillEffectDao" useGeneratedKeys="true" keyProperty="id">
        insert into skill_effect /* SkillMapper.insertSkillEffect :: 스킬 효과 등록 */
        (
              skill_id
            , effect_cd
            , effect_ui_cd
            , effect_type
            , effect_type_num
            , effect_type_stat
            , effect_type_skill_cd_1
            , effect_type_skill_cd_2
            , effect_type_calc_txt
            , effect_start
            , effect_maintain_time
            , effect_apply
            , target
            , enemy_all_yn
            , enemy_num
            , enemy_targeting_type
            , enemy_txt
            , friend_all_yn
            , friend_num
            , friend_targeting_time
            , friend_txt
            , use_yn
        )
        values (
             #{skillId}
           , #{effectCd}
           , #{effectUiCd}
           , #{effectType}
           , #{effectTypeNum}
           , #{effectTypeStat}
           , #{effectTypeSkillCd1}
           , #{effectTypeSkillCd2}
           , #{effectTypeCalcTxt}
           , #{effectStart}
           , #{effectMaintainTime}
           , #{effectApply}
           , #{target}
           , #{enemyAllYn}
           , #{enemyNum}
           , #{enemyTargetingType}
           , #{enemyTxt}
           , #{friendAllYn}
           , #{friendNum}
           , #{friendTargetingTime}
           , #{friendTxt}
           , 1
        )
    </insert>

    <update id="updateSkill" parameterType="com.ras.dao.SkillDetailDao">
        update skill /* SkillMapper.updateSkill :: 스킬 수정 */
        set
            name = #{name}
          , img = #{img}
          , txt = #{txt}
        where id = #{id}
    </update>

    <update id="updateSkillTrigger" parameterType="com.ras.dao.SkillTriggerDao">
        update skill_trigger /* SkillMapper.updateSkillTrigger :: 스킬 발동조건 수정 */
        set
            trigger_type_cd = #{triggerTypeCd}
          , trigger_stat_id = #{triggerStatId}
          , trigger_num = #{triggerNum}
          , trigger_percent_yn = #{triggerPercentYn}
          , trigger_be_ab_yn = #{triggerBeAbYn}
          , trigger_first_do_yn = #{triggerFirstDoYn}
          , skill_id = #{skillId}
          , use_yn = #{useYn}
        where id = #{id}
    </update>

    <update id="updateSkillEffect" parameterType="com.ras.dao.SkillEffectDao">
        update skill_effect /* SkillMapper.updateSkillEffect :: 스킬 효과 수정 */
        set
            skill_id = #{skillId}
          , effect_cd = #{effectCd}
          , effect_ui_cd = #{effectUiCd}
          , effect_type = #{effectType}
          , effect_type_num = #{effectTypeNum}
          , effect_type_stat = #{effectTypeStat}
          , effect_type_skill_cd_1 = #{effectTypeSkillCd1}
          , effect_type_skill_cd_2 = #{effectTypeSkillCd2}
          , effect_type_calc_txt = #{effectTypeCalcTxt}
          , effect_start = #{effectStart}
          , effect_maintain_time = #{effectMaintainTime}
          , effect_apply = #{effectApply}
          , target = #{target}
          , enemy_all_yn = #{enemyAllYn}
          , enemy_num = #{enemyNum}
          , enemy_targeting_type = #{enemyTargetingType}
          , enemy_txt = #{enemyTxt}
          , friend_all_yn = #{friendAllYn}
          , friend_num = #{friendNum}
          , friend_targeting_time = #{friendTargetingTime}
          , friend_txt = #{friendTxt}
          , use_yn = #{useYn}
        where id = #{id}
    </update>
</mapper>